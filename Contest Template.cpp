///%%%%%%%%%%@/###/#((((#*/(,(#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</%$@#()?{}@$%#&{([]/#
///%%%%%%%%%%*(####,,#(#/%@@@&<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<&%//**(//*%##*$#@&)
///######(%##%#%##%%%#(&##&@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<@@@@&####%@@@@&&#(
///%%%%#%(%%%%#%###%%%%%%#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<&@@@@@%%%@@@@@&@@
///%%#%%(%%%%%%%%%%&%%&&/<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</#%#%%%@@@&&@@@@
///&%%%&%%%%%%%%###%#%%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<%%%%%#%##%#%#%%
///((/((((/((((((###@&%/<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#%#%%%%%%%%###@
///((((((//((//((///(((/<<<<<<((#(###(//&(@?|*#{}{})(&$#@?*^#\<<<<<<)({%%%%%%%%%#%#
///)////(/(/(/(//((((((/<<<<<((####%%%%%%&%%&%%%%#%###%###((/*<<<<<<%#%%###%%%%##%%
///}//////(////////((((/<<<</(####%%%%%&%&%%&&&&&&%%%%%%%####(\<<<<<&####%@&%&&%&&%
///(((((((((//////(//(((/<</####%%%%%&&&&&%&&%%%%%%%%%%%#####(\<<<<(((((((((((((///
///((((///(((((((((((#(((.(#####%%%%&&&&&&&&&&&&%%%%%%%#####(((<<<<(((((((((/((/(((
///(((((((#((((((((/(%(((#(####%%%%%&&&&&&&&&&&&&&&&%%%%###((((/<</(((((((((((##(((
///####(#(###((((#((((\@/                %&&&&&%               (<<(/(////((((((((((
///%&@@###############&%{                 #####                ()*(((((/(/((///////
///%%%%%%%%%%%@@@#%%#%#*}                 ####%                }@$/#((((#((((#(((/(
///%%%%%%%%%%%%%%%%%&%%%{                 #&&%(                (&*(((((((((((((%(((
///%%&%%%%%%&&%%%%%%%%%#\                .#%&&%#               ((%#(#(#(####((((((#
///#%#%%%#%#%%%%%%%%&&&%((--------------/&&&%%##\--------------/#(####%((((#(((((({
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///&&&&%##%%%%#####%%%%%%(##%%%%&&%%&/*,,###*..((%&&&&&%((/((((#@@@#%%%%###########
///&&&&&&&&&&&&%%%%%%%%%#((#######(#####%((###%%%%%&&%%%####(/%%%%%%%%%%%%@@@%%#%##
///&&&&&&&&&&&&&&&&&&&/....((###(/./((###%#%#####(###%####((/.&%%%%%%%%%%%%%%%%%%%%
///&&&&&&&&&&&&&&&&&&%......((#(##%#(##%%&&@&%#(###((###((*(  .//#%&%%%%%%%%%%%%%#%
///&&&&&&&&&&&&&&&&&&........./((###%%%%%##,,*(#####(((//.........(&&%%%&%&%&&%%%%%
///&&%&&&&&&&&#(((((,.......@&,*.,((#%%%%%%%%%%#(((**.....##@...../(%%%%%%%&%%&%%#%
///&&&%&&&((...............@@& (/**.,*/(((#((#/*........#%@@&,...../(%%%%%%%%#%%#%%
///&%%%................../$@@/(#(#(***...............&@@@@@&........(/%%%%%%%%%%%%%
///%%%................../#@@@@.#######/*.........***#@@@@@@&,........(####%%%#%%%%%
///&&..................@@@@@@@%%%#####(((/****(##@@@@@@@@@,.............}##@&%####%
///&..................@@@@@@@@&&&&&&&&&&&&&&&&&@@@@@@@@@@................((((/(/(&&
///%................(@@@@@@@@@&&&&&&&&&&&&&&&@@@@@@@@@@@*,...............(/(((/((((
///.................(@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@,.................(*(//((((
///.................(@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@,.........................(
///.................(@@@@@@@@@@%&&&&&&&&&&&@@@@@@@@@@@@,...........................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@@@,...................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@@,....................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@,.....................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@,......................................
///,................(@@@@@@@@@@@@@@@@@@@@@@,.......................................
///.................(@@@@@@@@@@@@@@@@@@@@@,........................................
///.................(@@@@@@@@@@@@@@@@@@@@,.........................................

#include<bits/stdc++.h>
using namespace std;
///--------------------**********----------------------------------
#define     Aminahid               ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(0)
#define     ll                     long long int
#define     ld                     long double
#define     db                     double
#define     ull                    unsigned long long int
#define     str                    string
#define     vc                     vector
#define     stk                    stack
#define     pb(x)                  push_back(x)
#define     all(x)                 x.begin(), x.end()
#define     allr(x)                x.rbegin(), x.rend())
#define     ig                     cin.ignore(numeric_limits<streamsize>::max(),'\n')
//------------------calculation-------------------------------------
#define     uni(y)                 y.erase(unique(all(y)), y.end())
#define     eras(y, k)             y.erase(y.begin() + k)
#define     srt(v1)                sort(all(v1))
#define     srtr(x)                sort(allr(x))
#define     mx(a)                  *max_element(all(a))
#define     mn(a)                  *min_element(all(a))
#define     min3(a,b,c)            min(a,min(b,c))
#define     min4(a,b,c,d)          min(d,min(a,min(b,c)))
#define     max3(a,b,c)            max(a,max(b,c))
#define     max4(a,b,c,d)          max(d,max(a,max(b,c)))
#define     max6(a1,a2,a3,b1,b2,b3) max(a1,max(a2,max(a3,max(b1,max(b2,b3)))))
#define     gcd(a,b)               __gcd(a,b)
#define     lcm(a,b)               ((a)*(b)/gcd(a,b))
#define     sqr(x)                 (x)*(x)
#define     sz(x)                  x.size()
///                                transform(s.begin(), s.end(), s.begin(), ::tolower);
//---------------------input/output---------------------------------------
#define     sl(x)                  scanf("%lld",&x)
#define     sl2(x,y)               scanf("%lld %lld", &x,&y)
#define     sl3(x,y,z)             scanf("%lld %lld %lld",&x,&y,&z)
#define     pl(x)                  printf("%lld",x)
#define     pl2(x,y)               printf("%lld %lld",x,y)
#define     pl3(x,y,z)             printf("%lld %lld %lld",x,y,z)
#define     no                     cout << "NO" << endl
#define     yes                    cout << "YES" << endl
#define     No                     cout << "No" << endl
#define     Yes                    cout << "Yes" << endl
#define     fs(x)                  fixed << setprecision(x)
#define     el                     << endl
#define     cl                     cout << endl;
#define     co(x)                  cout << x << endl
//----------------------loops---------------------------------------
#define     tci                    cin >> _; ig; while(_--)
#define     tc                     cin >> _; while(_--)
#define     lp(i,a,n)              for(i=a; i<= n; i++)
#define     lr(i,n,a)              for(i=n-1; i>= a; i--)
#define     trav(x)                for(auto i: x)
#define     print(x)               for(auto i: x) { cout << i << " "; }
//----------------------Constants-----------------------------------
#define     pi                     3.14159265358979323846
#define     max_int                2147483647
#define     min_int                -2147483648
#define     mod                    1000000007
///--------------------**********------------------------------------

bool primecheck(int n)
{
    if((n!=2 && n%2==0) || n==1)
        return false;
    for(int i=3; i<=sqrt(n); i++)
    {
        if(n%i==0)
            return false;
    }
    return true;
}

string adBi(string a, string b)
{
    string result = "";
    int s = 0, i = a.size() - 1, j = b.size() - 1;

    while (i >= 0 || j >= 0 || s == 1)
    {
        s += ((i >= 0)? a[i] - '0': 0);
        s += ((j >= 0)? b[j] - '0': 0);
        result = char(s % 2 + '0') + result;
        s /= 2;
        i--; j--;
    }
    return result;
}

int octalToDecimal(int octalN)
{
    int decimalN = 0, i = 0, rem;
    while (octalN != 0)
    {
        rem = octalN % 10;
        octalN /= 10;
        decimalN += rem * pow(8, i);
        ++i;
    }
    return decimalN;
}

int countDistinct(string s)
{
    unordered_map<char, int> m;
    for (int i = 0; i < s.length(); i++)
    {
        m[s[i]]++;
    }
    return int(m.size());
}

ll power(ll b, ll p)
{
    ll mul=1,i;
    lp(i,1,p)
    {
        mul*=b;
    }
    return mul;
}

int isPalindrome(string s)
{
    int l = 0;
    int h = sz(s);
    h--;
    while (h > l)
    {
        if (s[l++] != s[h--])
        {
            return 0;
        }
    }
    return 1;
}

ll _,a,b,i,j,k,l,m,n,o,t,len,loc,cnt,rem,sum,mul,maxi,mini;
db d,e,f,g;
char c,c2;
str s,r,z;

//vc< ll > v,v2,v3;
vc< db > vd,vd2,vd3;
///vc< str > vs(1000000),vs2(10000),vs3(10000);
vc< vc< ll > > vv,vv2,vv3;

stk< ll > sl,sl2,sl3;
stk< db > sd,sd2,sd3;
stk< str > ss,ss2,ss3;
set< ll > se;
queue< ll > q;
priority_queue< ll > pq;
vc< ll > ::iterator it;

        ///****Main****///
int main()
{
    Aminahid;
    a=b=d=e=i=j=k=l=m=n=o=t=len=loc=cnt=sum=rem=0,mul=1;
    mini=max_int;
    maxi=min_int;
    /// bool ba[100000]={0},ba2[100000]={0};
    /*  ba[x] = 1/true;  */
    //compare function in template

    ///>>>>>CodeChef!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>CodeForces!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///     A. Cards for Friends
/**
tc
{
    cin >> m >> n >> o;
    cnt=1;
    while(m%2==0 || n%2==0)
    {
        if(m%2==0)
        {
            cnt*=2;
            m/=2;
        }
        else if(n%2==0)
        {
            cnt*=2;
            n/=2;
        }
    }
    if(cnt>=o)
        yes;
    else
        no;
}
/**/
    ///     B. Fair Division
/**
tc
{
    cin >> n;
    ll x[3]={0};
    while(n--)
    {
        cin >> a;
        x[a]+=1;
    }
    if(x[1]%2==0 && x[2]%2==0)
        yes;
    else
        no;
}
/**/

/**tc
{
    sl2(n,j);
    cnt=0;
    vc <int> v;
    v.clear();
    lp(i,0,n-1)
    {
        cin >> a;
        if(a>j)
        {
            cnt++;
            //co(cnt);
        }
        v.pb(a);
    }
    srt(v);
    //print(v);
    if((v[0]+v[1])<=j || cnt==0)
        yes;
    else
        no;
}
/**/
    ///     A. Yet Another String Game
/**tci
    {
        cin >> s;
        lp(i,0,sz(s)-1)
        {
            if(i%2 || i==0)
            {
                a=(int) s[i];
                a=a+1;
                c=a;
            }
            else
            {
                a=(int) s[i];
                a=a-1;
                c=a;
            }
                cout << c << " ";
        }
        cl;
    }
/**/
    ///     A. Split it!
/**tci
{
    cin >> n >> k >> s;
    if(isPalindrome(s)==1 && k!=ceil(n/2.0))
            yes;
    else if(k==0)
        yes;
    else
        no;
}
/**/

/**/
/**/
    ///>>>>>Spoj!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>AtCoder!!!!!!!!!!!!!!!!!!!!!!!!
/**cin >> a >> b;
if(a>b)
{
    j=a;
    a=b;
    b=j;
}
if(a+3>b)
    cout << "Yes" el;
else
    cout << "No" el;
/**/
/**
cin >> t;
ll x[t+1], y[t+1];
lp(i,1,t)
{
    cin >> x[i];
}
lp(j,1,t)
{
    cin >> y[j];
}
sum=0;
lp(k,1,t)
{
    sum+=(x[k]*y[k]);
}
if(sum)
    no;
else
    yes;
/**/
    ///     B - Alcoholic
/**cin >> t >> k;
    i=1;
    while(t--)
    {
        cin >> a >> b;
        sum=sum+(a*(b*0.01));
        if(sum>k)
        {
            co(i);
            cnt++;
        }
        i++;
    }
    if(cnt==0)
        co("-1");
/**/
    ///
/**/
/**/
/**/

    ///>>>>>HackerEarth!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>HackerRank!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>Uva!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>Timus!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>URI!!!!!!!!!!!!!!!!!!!!!!!!
/**/

/**/
    ///>>>>>Toph!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    /// D. Congruence Problem
/**Stci
{
    cin >> m;
    i=0;
    while(1)
    {
        a=power(i,i)+4*i+3;
        if(a%m==0)
            break;
        else
            i++;
    }
    co(i);
}

/**
    cin >> n >> t;
    ll x[10000]={0},y[10000]={0},z[10000]={0};
    lp(i,0,n-1)
    {
        cin >> x[i];
    }
    lp(j,0,n-1)
    {
        cin >> y[j];
        if(y[j]<mini)
            mini=y[j];
    }
    lp(k,0,n-1)
    {
        sum+=x[k]*mini;
    }
    if(sum<t)
        cout << fs(1) << (db)sum << endl;
    else
        cout << fs(1) << (db)t << endl;

/**/
    tci
    {
        scanf("%lld",&a);
        sum=0;
        lp(i,1,max_int)
        {
            sum+=i;
            if(sum==a)
            {
                printf("%lld\n",i);
                break;
            }
            else if(sum>a)
            {
                printf("NAI\n");
                break;
            }
        }
    }
















}
///*,,,,,*(%%%&&%%#/##&/((#&*(((((//##&,##@#@&&@%#@@@@@#(#@@&#%%%%%&&#((&**&#%%&
///*,,,,,,,,, (///(/////*#(/%/*%/(#(((/#/,,,%&#&&&%\@\@&#@#%&&#%#%(##@&&&-/(@@&/
///,,,,,,,,.,#/////%%///(,   .    .,/%&&@&&@@&@&&&&&@%&&%(%&#, %%((##/((#,**#& %%%&
///*****-/,****,***,,*/.**  ./&#%&%&@(&&&#(%%%#&@&@%@&&&%@&%&%,      .****,    ..*/
///,,,,**/,,*,*,***,,,,,,*&%&&#%@(#@%&@@@@@%@&%&@&&&&&&&&&%@@@@#&(.     ,,,     .
///***,,/,,,,,,,,,,.,,..(&&&&@@@@@&@@@@%@@&@(@@@##%&@@%@&@@@&&@@@%#(*,*,,,   ..
///.,,,.,,,*,,,****,*,,%@&&@@@@&@@@@@&&@@&@&@@@@@@@@@#&@&@@&%%&&@#&%,*,,,****,*,**,
///-/(////(//////*** .,(&@@@&@&@&###&%%@&%@@&@%@@@@@@@&&&@&&@@@@@&&##*,**,,*,,,,***
///=//////(//((//((////#&&@&&&#////***/((#%&%%%&#%@%%@&&@&&%&@@@&@%%,*,,,,,,,,,,***
///(((((/(/(///((//////(%@@@#//****,,,,,,.,,,,,,**********//(#&@#&&&,*,,***********
///(((((((//(((((((////(&@&#/*****,,,,,,,,,,..,..,,,,,,*****//(&@@@%****, .,,,,..,,
///=////////(((((///(///(@&(****,,,,,,,,,,,,.,,,,,,,,,*******/((@%%(////////////(((
///=///((////////////*///&/*****,,,,...........,,,,,,,,****////#&@@/////////(//(///
///-///////*////////(/,///*/*****,,,,,..............,,,***/////(&%(///////////**///
///-****/*/***////*////n@@@@@@@@@@@@(/,,,,,,,,,,,,,,,,,****/////%&/(/(((((/(///////
///,.  ***************.,@@(#%%&%&@&&@%#@@/****n@@@&&@&&&@@@@@@(#@//////(/(//(((((((
///,,,,,,,,,*,   *,,*,**/&(#&&&&&@@@&@@&%@@&&@@@@@@@@@&&&&%%%#@@&,#*////*////*///(/
///,,,,,,,,,,,,,,,,,.,,,*@##(#######%#(#@*,.,(@%%#%##@%#@@@%((@/##/////////////,///
///*,.,,,,,,.,,,,,,,,,,,**@#/////////{\@,,..,*@((/((((####((%@//**/*/*//***//////*/
///*******,*,,,,,,,,,..,/**/(@&(****%@%*,...,,*@(//////////(@(((,*/****,////*//////
///*********,,,,*,,,,,,,,***,,,...,,,,,,,...,,,,*%*(@@##(@#//(/#**************/**//
///....,**,,*,*****,,,,,,/**,,,,,,,,,(#%%***#&&//,....,,//((///*   *,,,,***********
///............,,,,,,,,**//*******/*****,//*//,,,,,,.,,,**///(,,,,,,,,,,,,   ,,*,**
///...................(@%&#//**//(&(//***,*,****////*****///(&.,,,,,,,,,,,,,,,,,,,,
///..................,@%&@&&(///****/**,,.. .,*//**//***//#\@@&((*,,,,,,,,,,,,,,,*,
///..................%&&&&@@@@(///**,,,,***%%#/****////((%%&@&%&&@/,,,,,.,.,..,,,,,
///..,........*/////#&&%@@&% ,%#&%//*,,,,,,,,,**//(##%&@%%** &&@&&(/,,,,,,,.,,.,,*,
///,,.,...//&#&&%%%%&&&@&&%  .@((##&%#(//////*(#&%%&&%%%*,  .#&&%&%(/*,,,*,,,****,,
///.,,,%%%%&%%%&&&&.&&@@&@  .(///*/###%%%&%&&&&%%%%%%#,    .&&%%&%%(/(,,,,,,,,,,,,,
///,,,&%%%%%&%%%%&&%@&@@,    (******/#%%%%%%%%%%%##*      .%#&&&&&&%/(&***,,,*,,,,,
///,.&%&%%&&&&&%%%&&@&%      %,,,*****///(####/**         #&#%%&&&&&&#%%#%*..******
///.&%&&%%&%%%%%%%&@@&       #,,,*,,,,*********          &&%%%%&&&%#%&%##////(/(/..
///,&%&&&&&&%%%&%%&/&       .*,,,,,,,,,,,,,,,           ##%%%%#@&#&&%%%&&/(///(////
///%&&&&&&&%%%&%&%%/(*%&    . ,.,,,,..,,,,              %%&%%%#&&%#%&#&&%%/#/((////
///&%&&%&%&&%%%&&&%@(%/.  .    .,,...   ..,.            %&&%%&&&#%&%%&&&&&&%&&@%/((
///&&&&&&%%%%%%&&%&&(%%.   .   ,,,......       *       %&&#%%##%&%&&&&&&&%&%&&&%@&&
///(&%&&&%%%&%&&&%&@(%(*  .     ,,      .       %&&#%&%%%#&&%(@&&&&#&%&&&%&&&%&&&&&
///%&&&&%&&&%&%%&&&@{@%/        *              &&&&&%##%%%%&&&&%&&&%%&@#&&%&@%&&&&&
///%%&&&&&&&&&%%%&&&/#&                       %&&&#&%#%%#/&%&#&&&#&@%&&&&%&&&@@@&&&
///&%&&&%%&&&&&&%&&@/##                     (%&&&%%&&%#/&%%&%%@&@%&&&&%@&@&&@&@&@@@
///%&&&&&&&&&&&&&@@&/%#                    %%%&%%%&##@%%%%%&&&&&#&&&&@&&&&&@&&@&&&&
///&&&&%&&&&&&&&&&&&/%#                   %%&&@@@@@@@@@@@@@@@@@&&&%&%&@@&@@@%&%&@&@
///&&&&&&&&&&&&&&&&&/&(          /      .%&&%@@@%@@@@@@@@@@@@@@@@@&&%&&@&&&@&&@@@@&
///&&&&&&&&&&&&&&@&&/%#          ,     %&%&%&@@@@@@@@@@@@@@@@@@@@%&&&&&%@&&&&&%@@@@
///&&&&%&&&&&&&&&&&&/%(          *    %%%%##@@@@@@@@@@@@@@@@@@@@@@&&&&@@&&@@&@@&&@&
///&%&&%&&&&&&&&%&&&/%.          ,  .%&%//&&@@@@@@@@@@@@@@@@@@@@@@@@%@&@@@@&&@&&@&&
///&%&&%&&&&&&&&&&&&(%(            #%%/&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@&@&&@@@@@
///&&&&&%&&&&&&&&&&&/33          *#(&@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@&@&@@

