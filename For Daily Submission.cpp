///%%%%%%%%%%@/###/#((((#*/(,(#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</%$@#()?{}@$%#&{([]/#
///%%%%%%%%%%*(####,,#(#/%@@@&<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<&%//**(//*%##*$#@&)
///######(%##%#%##%%%#(&##&@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<@@@@&####%@@@@&&#(
///%%%%#%(%%%%#%###%%%%%%#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<&@@@@@%%%@@@@@&@@
///%%#%%(%%%%%%%%%%&%%&&/<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</#%#%%%@@@&&@@@@
///&%%%&%%%%%%%%###%#%%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<%%%%%#%##%#%#%%
///((/((((/((((((###@&%/<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#%#%%%%%%%%###@
///((((((//((//((///(((/<<<<<<((#(###(//&(@?|*#{}{})(&$#@?*^#\<<<<<<)({%%%%%%%%%#%#
///)////(/(/(/(//((((((/<<<<<((####%%%%%%&%%&%%%%#%###%###((/*<<<<<<%#%%###%%%%##%%
///}//////(////////((((/<<<</(####%%%%%&%&%%&&&&&&%%%%%%%####(\<<<<<&####%@&%&&%&&%
///(((((((((//////(//(((/<</####%%%%%&&&&&%&&%%%%%%%%%%%#####(\<<<<(((((((((((((///
///((((///(((((((((((#(((.(#####%%%%&&&&&&&&&&&&%%%%%%%#####(((<<<<(((((((((/((/(((
///(((((((#((((((((/(%(((#(####%%%%%&&&&&&&&&&&&&&&&%%%%###((((/<</(((((((((((##(((
///####(#(###((((#((((\@/                %&&&&&%               (<<(/(////((((((((((
///%&@@###############&%{                 #####                ()*(((((/(/((///////
///%%%%%%%%%%%@@@#%%#%#*}                 ####%                }@$/#((((#((((#(((/(
///%%%%%%%%%%%%%%%%%&%%%{                 #&&%(                (&*(((((((((((((%(((
///%%&%%%%%%&&%%%%%%%%%#\                .#%&&%#               ((%#(#(#(####((((((#
///#%#%%%#%#%%%%%%%%&&&%((--------------/&&&%%##\--------------/#(####%((((#(((((({
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///%##%###%#%%%%%%%%%%%%%##%%%&&&&%%%%%%&&&&%%%%#%%&&&&%%%%((((*##############(##((
///&&&&%##%%%%#####%%%%%%(##%%%%&&%%&/*,,###*..((%&&&&&%((/((((#@@@#%%%%###########
///&&&&&&&&&&&&%%%%%%%%%#((#######(#####%((###%%%%%&&%%%####(/%%%%%%%%%%%%@@@%%#%##
///&&&&&&&&&&&&&&&&&&&/....((###(/./((###%#%#####(###%####((/.&%%%%%%%%%%%%%%%%%%%%
///&&&&&&&&&&&&&&&&&&%......((#(##%#(##%%&&@&%#(###((###((*(  .//#%&%%%%%%%%%%%%%#%
///&&&&&&&&&&&&&&&&&&........./((###%%%%%##,,*(#####(((//.........(&&%%%&%&%&&%%%%%
///&&%&&&&&&&&#(((((,.......@&,*.,((#%%%%%%%%%%#(((**.....##@...../(%%%%%%%&%%&%%#%
///&&&%&&&((...............@@& (/**.,*/(((#((#/*........#%@@&,...../(%%%%%%%%#%%#%%
///&%%%................../$@@/(#(#(***...............&@@@@@&........(/%%%%%%%%%%%%%
///%%%................../#@@@@.#######/*.........***#@@@@@@&,........(####%%%#%%%%%
///&&..................@@@@@@@%%%#####(((/****(##@@@@@@@@@,.............}##@&%####%
///&..................@@@@@@@@&&&&&&&&&&&&&&&&&@@@@@@@@@@................((((/(/(&&
///%................(@@@@@@@@@&&&&&&&&&&&&&&&@@@@@@@@@@@*,...............(/(((/((((
///.................(@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@,.................(*(//((((
///.................(@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@,.........................(
///.................(@@@@@@@@@@%&&&&&&&&&&&@@@@@@@@@@@@,...........................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@@@,...................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@@,....................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@@,.....................................
///.................(@@@@@@@@@@@@@@@@@@@@@@@,......................................
///,................(@@@@@@@@@@@@@@@@@@@@@@,.......................................
///.................(@@@@@@@@@@@@@@@@@@@@@,........................................
///.................(@@@@@@@@@@@@@@@@@@@@,.........................................

#include<bits/stdc++.h>
using namespace std;
///--------------------**********----------------------------------
#define     Aminahid               ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(0)
#define     ll                     long long int
#define     ld                     long double
#define     db                     double
#define     ull                    unsigned long long int
#define     str                    string
#define     vt                     vector
#define     stk                    stack
#define     pb(x)                  push_back(x)
#define     all(x)                 x.begin(), x.end()
#define     allr(x)                x.rbegin(), x.rend())
#define     ig                     cin.ignore(numeric_limits<streamsize>::max(),'\n')
//------------------calculation-------------------------------------
#define     uni(y)                 y.erase(unique(all(y)), y.end())
#define     eras(y, k)             y.erase(y.begin() + k)
#define     srt(v1)                sort(all(v1))
#define     srtr(x)                sort(allr(x))
#define     mx(a)                  *max_element(all(a))
#define     mn(a)                  *min_element(all(a))
#define     min3(a,b,c)            min(a,min(b,c))
#define     min4(a,b,c,d)          min(d,min(a,min(b,c)))
#define     max3(a,b,c)            max(a,max(b,c))
#define     max4(a,b,c,d)          max(d,max(a,max(b,c)))
#define     max6(a1,a2,a3,b1,b2,b3) max(a1,max(a2,max(a3,max(b1,max(b2,b3)))))
#define     gcd(a,b)               __gcd(a,b)
#define     lcm(a,b)               ((a)*(b)/gcd(a,b))
#define     sqr(x)                 (x)*(x)
#define     sz(x)                  x.size()
///                                transform(s.begin(), s.end(), s.begin(), ::tolower);
//---------------------input/output---------------------------------------
#define     sl(x)                  scanf("%lld",&x)
#define     sl2(x,y)               scanf("%lld %lld", &x,&y)
#define     sl3(x,y,z)             scanf("%lld %lld %lld",&x,&y,&z)
#define     pl(x)                  printf("%lld",x)
#define     pl2(x,y)               printf("%lld %lld",x,y)
#define     pl3(x,y,z)             printf("%lld %lld %lld",x,y,z)
#define     no                     cout << "NO" << endl
#define     yes                    cout << "YES" << endl
#define     fs(x)                  fixed << setprecision(x)
#define     el                     << endl
#define     cl                     cout << endl;
#define     co(x)                  cout << x << endl
//----------------------loops---------------------------------------
#define     tci                    cin >> _; ig; while(_--)
#define     tc                     cin >> _; while(_--)
#define     lp(i,a,n)              for(i=a; i<= n; i++)
#define     lr(i,n,a)              for(i=n-1; i>= a; i--)
#define     trav(x)                for(auto i: x)
#define     print(x)               for(auto i: x) { cout << i << " "; }
//----------------------Constants-----------------------------------
#define     pi                     3.14159265358979323846
#define     max_int                2147483647
#define     min_int                -2147483648
#define     mod                    1000000007
///--------------------**********------------------------------------

bool primecheck(int n)
{
    if((n!=2 && n%2==0) || n==1)
        return false;
    for(int i=3; i<=sqrt(n); i++)
    {
        if(n%i==0)
            return false;
    }
    return true;
}

string adBi(string a, string b)
{
    string result = "";
    int s = 0, i = a.size() - 1, j = b.size() - 1;

    while (i >= 0 || j >= 0 || s == 1)
    {
        s += ((i >= 0)? a[i] - '0': 0);
        s += ((j >= 0)? b[j] - '0': 0);
        result = char(s % 2 + '0') + result;
        s /= 2;
        i--; j--;
    }
    return result;
}

int octalToDecimal(int octalN)
{
    int decimalN = 0, i = 0, rem;
    while (octalN != 0)
    {
        rem = octalN % 10;
        octalN /= 10;
        decimalN += rem * pow(8, i);
        ++i;
    }
    return decimalN;
}

int countDistinct(string s)
{
    unordered_map<char, int> m;
    for (int i = 0; i < s.length(); i++)
    {
        m[s[i]]++;
    }
    return int(m.size());
}

ll power(ll b, ll p)
{
    ll mul=1,i;
    lp(i,1,p)
    {
        mul*=b;
    }
    return mul;
}

ll fact(ll n)
{
    ll i,mul=1;
    lp(i,1,n)
    {
        mul*=i;
    }
    return mul;
}

ll _,a,b,i,j,k,l,m,n,o,t,len,loc,cnt,rem,sum,mul,maxi,mini;
db d,e,f,g;
char c,c2;
str s,r,z;

//vt< ll > v,v2,v3;
vt< db > vd,vd2,vd3;
///vc< str > vs(1000000),vs2(10000),vs3(10000);
vt< vt< ll > > vv,vv2,vv3;

stk< ll > sl,sl2,sl3;
stk< db > sd,sd2,sd3;
stk< str > ss,ss2,ss3;

set< char > se;

queue< ll > q;

priority_queue< ll > pq;
vector< ll > ::iterator it;

/*int *ptr;
    ptr=new int[1000];
    delete [] p;
    p=NULL;
*/
int main()
{
    Aminahid;
    a=b=d=e=i=j=k=l=m=n=o=t=len=loc=cnt=sum=rem=0,mul=1;
    mini=max_int;
    maxi=min_int;
    /// bool ba[100000]={0},ba2[100000]={0};
    /*  ba[x] = 1/true;  */


    ///>>>>>HackerRank!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
    ///>>>>>CodeChef!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///     CHEF PIZZA

/**
tci
{
    getline(cin , s);
    transform(s.begin(), s.end(), s.begin(), ::tolower);
    lr(i,sz(s),0)
    cout << s[i];
    cout << endl;
}
/**/
/**/
    ///>>>>>CodeForces!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
/**/

    ///>>>>>AtCoder!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///     A - Redundant Redundancy
/**cin >> a;
    if(a%2)
        co(2+a);
    else
        co(++a);
/**/
    ///     C - 1-SAT
/**cin >> t;
    lp(i,0,t-1)
    {
        cin >> vs[i];
    }

/**/
/**/
    ///>>>>>HackerEarth!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///--------------Basic Programming >>>>> Input/Output------------------
    ///     Maximum borders     ///
/**tc
    {
        cin >> a >> b;
        maxi=0;
        lp(i,1,a)
        {
            cnt=0;
            lp(j,1,b)
            {
                cin >> c;
                if(c=='#')
                    cnt++;
            }
            if(cnt>maxi)
                maxi=cnt;
        }
        co(maxi)
    }
/**/
    ///
/**cin >> t;
    while(t--)
    {
        str ;
        cin >> m >> n;
        cout << "+-------------+------------+--------+------------+--------+" el;
        cout << "| name        | dob        | f_name | date       | amount |" el;
        cout << "+-------------+------------+--------+------------+--------+" el;
        while(n--)
        {
            cin >> name >> dob >> f_name >> date >> amount;
            printf("| %-11s | %-10s | %-12s | %-8s | %6d |\n",name,dob,f_name,date,amount);
            cout << "| " << name << " | " << dob << f_name << date <<
        }
        cout << "+-------------+------------+--------+------------+--------+" el;
    }

/**
1
5 2
name dob f_name date amount
AnshulKumar 07/07/1995 Tamal 30/02/2019 20000
RahulKumar 07/02/1995 Manish 31/03/2019 16000
*/
    ///--------------Basic Programming >>>>>  Operators ------------------
    ///
/**/
/**/
    ///     Micro and Array Update
/**tc
{
    cin >> n >> k;
    vt<int> v(n);
    v.clear();
    lp(i,0,n-1)
    {
        cin >> a;
        v.push_back(a);
    }
    srt(v);
    if(v[0]>=k)
        co('0');
    else
        co(k-v[0]);
}
/**/
    ///>>>>>Uva!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
/**/
    ///>>>>>Timus!!!!!!!!!!!!!!!!!!!!!!!!
    ///     1001. Reverse Root
/**     while(cin>>n)
        {
            vd.push_back(sqrt(n));
        }
        lr(i,vd.size(),0)
        {
            cout << fs(4) << vd[i] el
        }
/**/
    ///     2012. About Grisha N.
/**while(cin >>n)
{
    t=12-n;
    if(t*45<=240)
        yes;
    else
        no;
}
/**/
/**/ //compare function in template
    ///>>>>>URI!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
/**/
    ///>>>>>Toph!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
/**/
    ///>>>>>CS Academy!!!!!!!!!!!!!!!!!!!!!!!!
/**/
    ///
/**/
/**/
    ///     3-divisible Pairs
/* cin >> t;
    vt< ll > v1;
    lp(i,0,t-1)
    {
        cin >> n;
        v1.push_back(n);
    }
    lp(i,0,t-1)
    {
        lp(j,i+1,t-1)
        {
            if((v1[i]+v1[j])%3==0)
                cnt++;
        }
    }
    co(cnt)
/**/
/**/
    ///>>>>>LeetCode!!!!!!!!!!!!!!!!!!!!!!!!

#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
#endif














}
///*,,,,,*(%%%&&%%#/##&/((#&*(((((//##&,##@#@&&@%#@@@@@#(#@@&#%%%%%&&#((&**&#%%&
///*,,,,,,,,, (///(/////*#(/%/*%/(#(((/#/,,,%&#&&&%\@\@&#@#%&&#%#%(##@&&&-/(@@&/
///,,,,,,,,.,#/////%%///(,   .    .,/%&&@&&@@&@&&&&&@%&&%(%&#, %%((##/((#,**#& %%%&
///*****-/,****,***,,*/.**  ./&#%&%&@(&&&#(%%%#&@&@%@&&&%@&%&%,      .****,    ..*/
///,,,,**/,,*,*,***,,,,,,*&%&&#%@(#@%&@@@@@%@&%&@&&&&&&&&&%@@@@#&(.     ,,,     .
///***,,/,,,,,,,,,,.,,..(&&&&@@@@@&@@@@%@@&@(@@@##%&@@%@&@@@&&@@@%#(*,*,,,   ..
///.,,,.,,,*,,,****,*,,%@&&@@@@&@@@@@&&@@&@&@@@@@@@@@#&@&@@&%%&&@#&%,*,,,****,*,**,
///-/(////(//////*** .,(&@@@&@&@&###&%%@&%@@&@%@@@@@@@&&&@&&@@@@@&&##*,**,,*,,,,***
///=//////(//((//((////#&&@&&&#////***/((#%&%%%&#%@%%@&&@&&%&@@@&@%%,*,,,,,,,,,,***
///(((((/(/(///((//////(%@@@#//****,,,,,,.,,,,,,**********//(#&@#&&&,*,,***********
///(((((((//(((((((////(&@&#/*****,,,,,,,,,,..,..,,,,,,*****//(&@@@%****, .,,,,..,,
///=////////(((((///(///(@&(****,,,,,,,,,,,,.,,,,,,,,,*******/((@%%(////////////(((
///=///((////////////*///&/*****,,,,...........,,,,,,,,****////#&@@/////////(//(///
///-///////*////////(/,///*/*****,,,,,..............,,,***/////(&%(///////////**///
///-****/*/***////*////n@@@@@@@@@@@@(/,,,,,,,,,,,,,,,,,****/////%&/(/(((((/(///////
///,.  ***************.,@@(#%%&%&@&&@%#@@/****n@@@&&@&&&@@@@@@(#@//////(/(//(((((((
///,,,,,,,,,*,   *,,*,**/&(#&&&&&@@@&@@&%@@&&@@@@@@@@@&&&&%%%#@@&,#*////*////*///(/
///,,,,,,,,,,,,,,,,,.,,,*@##(#######%#(#@*,.,(@%%#%##@%#@@@%((@/##/////////////,///
///*,.,,,,,,.,,,,,,,,,,,**@#/////////{\@,,..,*@((/((((####((%@//**/*/*//***//////*/
///*******,*,,,,,,,,,..,/**/(@&(****%@%*,...,,*@(//////////(@(((,*/****,////*//////
///*********,,,,*,,,,,,,,***,,,...,,,,,,,...,,,,*%*(@@##(@#//(/#**************/**//
///....,**,,*,*****,,,,,,/**,,,,,,,,,(#%%***#&&//,....,,//((///*   *,,,,***********
///............,,,,,,,,**//*******/*****,//*//,,,,,,.,,,**///(,,,,,,,,,,,,   ,,*,**
///...................(@%&#//**//(&(//***,*,****////*****///(&.,,,,,,,,,,,,,,,,,,,,
///..................,@%&@&&(///****/**,,.. .,*//**//***//#\@@&((*,,,,,,,,,,,,,,,*,
///..................%&&&&@@@@(///**,,,,***%%#/****////((%%&@&%&&@/,,,,,.,.,..,,,,,
///..,........*/////#&&%@@&% ,%#&%//*,,,,,,,,,**//(##%&@%%** &&@&&(/,,,,,,,.,,.,,*,
///,,.,...//&#&&%%%%&&&@&&%  .@((##&%#(//////*(#&%%&&%%%*,  .#&&%&%(/*,,,*,,,****,,
///.,,,%%%%&%%%&&&&.&&@@&@  .(///*/###%%%&%&&&&%%%%%%#,    .&&%%&%%(/(,,,,,,,,,,,,,
///,,,&%%%%%&%%%%&&%@&@@,    (******/#%%%%%%%%%%%##*      .%#&&&&&&%/(&***,,,*,,,,,
///,.&%&%%&&&&&%%%&&@&%      %,,,*****///(####/**         #&#%%&&&&&&#%%#%*..******
///.&%&&%%&%%%%%%%&@@&       #,,,*,,,,*********          &&%%%%&&&%#%&%##////(/(/..
///,&%&&&&&&%%%&%%&/&       .*,,,,,,,,,,,,,,,           ##%%%%#@&#&&%%%&&/(///(////
///%&&&&&&&%%%&%&%%/(*%&    . ,.,,,,..,,,,              %%&%%%#&&%#%&#&&%%/#/((////
///&%&&%&%&&%%%&&&%@(%/.  .    .,,...   ..,.            %&&%%&&&#%&%%&&&&&&%&&@%/((
///&&&&&&%%%%%%&&%&&(%%.   .   ,,,......       *       %&&#%%##%&%&&&&&&&%&%&&&%@&&
///(&%&&&%%%&%&&&%&@(%(*  .     ,,      .       %&&#%&%%%#&&%(@&&&&#&%&&&%&&&%&&&&&
///%&&&&%&&&%&%%&&&@{@%/        *              &&&&&%##%%%%&&&&%&&&%%&@#&&%&@%&&&&&
///%%&&&&&&&&&%%%&&&/#&                       %&&&#&%#%%#/&%&#&&&#&@%&&&&%&&&@@@&&&
///&%&&&%%&&&&&&%&&@/##                     (%&&&%%&&%#/&%%&%%@&@%&&&&%@&@&&@&@&@@@
///%&&&&&&&&&&&&&@@&/%#                    %%%&%%%&##@%%%%%&&&&&#&&&&@&&&&&@&&@&&&&
///&&&&%&&&&&&&&&&&&/%#                   %%&&@@@@@@@@@@@@@@@@@&&&%&%&@@&@@@%&%&@&@
///&&&&&&&&&&&&&&&&&/&(          /      .%&&%@@@%@@@@@@@@@@@@@@@@@&&%&&@&&&@&&@@@@&
///&&&&&&&&&&&&&&@&&/%#          ,     %&%&%&@@@@@@@@@@@@@@@@@@@@%&&&&&%@&&&&&%@@@@
///&&&&%&&&&&&&&&&&&/%(          *    %%%%##@@@@@@@@@@@@@@@@@@@@@@&&&&@@&&@@&@@&&@&
///&%&&%&&&&&&&&%&&&/%.          ,  .%&%//&&@@@@@@@@@@@@@@@@@@@@@@@@%@&@@@@&&@&&@&&
///&%&&%&&&&&&&&&&&&(%(            #%%/&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@&@&&@@@@@
///&&&&&%&&&&&&&&&&&/33          *#(&@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@&@&@@
